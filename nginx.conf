upstream backend_her {
    # Replace with the correct address
	server <her ip/hostname>:8080;
}

# Replace <hostname> with your public DNS address
server {
	if ($host = <hostname>) {
	    return               301 https://$host$request_uri;
    }                    # managed by Certbot


    listen               80;
    server_name          <hostname>;
    return               404; # managed by Certbot
    rewrite              ^(.*) https://$host$1 permanent;


}

server {
	server_name           <hostname>;

	access_log            /var/log/nginx/her.access.log;
	error_log             /var/log/nginx/her.error.log;

	client_max_body_size  4G;
	keepalive_timeout     5;

	try_files             $uri/index.html $uri.html $uri @app;

	root                  /var/www/nginx-default;
	index                 index.html index.htm;

	location @app {
		gzip_static          on;
		proxy_pass           http://backend_her;
		proxy_redirect       off;

		proxy_set_header     Host $host;
		proxy_set_header     X-Real-IP $remote_addr;
		proxy_set_header     X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header     X-Forwarded-Proto $scheme;

		root                 /var/www/nginx-default;
		index                index.html index.htm;
	}


	error_page            500 502 503 504 /50x.html;
	location = /50x.html {
		root                 /var/www/nginx-default;
	}


	listen                443 ssl; # managed by Certbot
	ssl_certificate       /etc/letsencrypt/live/<hostname>/fullchain.pem; # managed by Certbot
	ssl_certificate_key   /etc/letsencrypt/live/<hostname>/privkey.pem; # managed by Certbot
	include               /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
	ssl_dhparam           /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}
